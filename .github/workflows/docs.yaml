name: Build Documentation
on:
  workflow_call:
    inputs:
      version:
        type: string
        default: latest
jobs:
  docs:
    name: Build and Deploy Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@v6
      - uses: actions/download-artifact@v4
        with:
          name: lib-ubuntu-latest
          path: ${{ runner.temp }}/artifact
      - name: Copy built library to language bindings
        run: |
          cp -r $RUNNER_TEMP/artifact/lib lang/python/mvsr/lib
      - name: Build sphinx documentation
        working-directory: docs
        run: uv run sphinx-build -- src build
      - uses: actions/checkout@v5
        with:
          path: gh-pages
          persist-credentials: true
      - name: Fetch existing gh-pages branch
        working-directory: gh-pages
        run: |
          if git ls-remote --exit-code origin gh-pages; then
              git fetch origin gh-pages
              git checkout gh-pages
          else
              git checkout --orphan gh-pages
              git rm -rf .
          fi
          touch .nojekyll
          echo '<html><head><meta http-equiv="refresh" content="0; url=stable/"></head></html>' \
              > index.html
      - name: Overwrite ${{ inputs.version }} gh-pages version
        run: |
          rm -rf "gh-pages/${{ inputs.version }}"
          cp -r docs/build "gh-pages/${{ inputs.version }}"
      - name: Update gh-pages
        working-directory: gh-pages
        run: |
          git config user.name "mvsr-docs[bot]"
          git config user.email "mvsr-docs[bot]@github.com"
          git add .
          git commit -m "Update ${{ inputs.version }} docs"
          git push origin gh-pages
