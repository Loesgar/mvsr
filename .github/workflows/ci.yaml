name: Test
on:
  push:
permissions:
  contents: read
jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      lib: ${{ steps.paths-filter.outputs.lib }}
      python: ${{ steps.paths-filter.outputs.python }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true
      - uses: dorny/paths-filter@v3
        id: paths-filter
        with:
          filters: |
            global: &global
              - .github/workflows/ci.yaml
              - .github/workflows/lib.yaml
              - flake.*
            lib-direct: &lib-direct
              - *global
              - mvsr/**
            python: &python
              - *global
              - lang/python/**
            lib:
              - *lib-direct
              - *python
  build-lib:
    name: Build ${{ needs.changes.outputs.lib-direct == 'true' && 'and Test ' }}C++ Library
    permissions:
      actions: write
      contents: read
    needs: changes
    if: needs.changes.outputs.lib == 'true'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest] # , ubuntu-24.04-arm, windows-latest
    uses: ./.github/workflows/lib.yaml
    with:
      runner: ${{ matrix.os }}
      run-tests: ${{ needs.changes.outputs.lib-direct == 'true' }}
  python-test:
    name: Test Python
    needs: [changes, build-lib]
    if: needs.changes.outputs.python == 'true'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest] # , ubuntu-24.04-arm, windows-latest
    uses: ./.github/workflows/python.yaml
    with:
      runner: ${{ matrix.os }}
      nox-session: test_simple
  python-coverage:
    name: Test Python Coverage
    needs: [changes, build-lib]
    if: needs.changes.outputs.python == 'true'
    uses: ./.github/workflows/python.yaml
    with:
      runner: ubuntu-latest
      nox-session: coverage
