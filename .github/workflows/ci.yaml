name: Test
on:
  push:
permissions:
  contents: read
jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      lib-build: ${{ steps.paths-filter.outputs.lib-build }}
      lib-test: ${{ steps.paths-filter.outputs.lib-test }}
      python: ${{ steps.paths-filter.outputs.python }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true
      - uses: dorny/paths-filter@v3
        id: paths-filter
        with:
          filters: |
            lib-test: &lib-test
              - .github/workflows/ci.yaml
              - .github/workflows/lib.yaml
              - flake.*
              - mvsr/**
            python: &python
              - *lib-test
              - lang/python/**
              - .github/workflows/python.yaml
            lib-build:
              - *python
  build-lib:
    name: Build ${{ needs.changes.outputs.lib-test == 'true' && 'and Test ' || '' }}C++ Library
    permissions:
      actions: write
      contents: read
    needs: changes
    if: needs.changes.outputs.lib-build == 'true'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest, windows-latest] # , ubuntu-24.04-arm
    uses: ./.github/workflows/lib.yaml
    with:
      runner: ${{ matrix.os }}
      run-tests: ${{ needs.changes.outputs.lib-test == 'true' }}
  python-test:
    name: Test Python
    needs: [changes, build-lib]
    if: needs.changes.outputs.python == 'true'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest, windows-latest] # , ubuntu-24.04-arm
    uses: ./.github/workflows/python.yaml
    with:
      runner: ${{ matrix.os }}
      nox-session: test_simple
  python-versions-sessions:
    name: Get Nox Sessions
    needs: changes
    if: needs.changes.outputs.python == 'true'
    runs-on: ubuntu-latest
    outputs:
      sessions: ${{ steps.get-sessions.outputs.sessions }}
    steps:
      - uses: actions/checkout@v5
      - uses: wntrblm/nox@main
      - id: get-sessions
        shell: bash
        working-directory: lang/python/test
        run: |
          echo sessions=$(nox --json -l | jq -c '
            [.[].session | select(startswith("test_versions"))]
          ') | tee --append $GITHUB_OUTPUT
  python-versions:
    name: Test Python and NumPy Version Compatibility
    needs: [changes, build-lib, python-versions-sessions]
    if: needs.changes.outputs.python == 'true'
    strategy:
      fail-fast: false
      matrix:
        session: ${{ fromJson(needs.python-versions-sessions.outputs.sessions) }}
    uses: ./.github/workflows/python.yaml
    with:
      runner: ubuntu-latest
      nox-session: ${{ matrix.session }}
  python-coverage:
    name: Test Python Coverage
    needs: [changes, build-lib]
    if: needs.changes.outputs.python == 'true'
    uses: ./.github/workflows/python.yaml
    with:
      runner: ubuntu-latest
      nox-session: coverage
